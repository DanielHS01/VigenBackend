// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vigen_Repository.Models;

#nullable disable

namespace Vigen_Repository.Migrations
{
    [DbContext(typeof(vigendbContext))]
    [Migration("20250408233741_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Vigen_Repository.Models.Notify", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("OrganizationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("organization_type_id");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("notify");
                });

            modelBuilder.Entity("Vigen_Repository.Models.Organization", b =>
                {
                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("nit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("OrganizationTypeID")
                        .HasColumnType("int")
                        .HasColumnName("organization_type_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel");

                    b.HasKey("Nit");

                    b.ToTable("organization");
                });

            modelBuilder.Entity("Vigen_Repository.Models.OrganizationType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("organization_type");
                });

            modelBuilder.Entity("Vigen_Repository.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("estado_civil");

                    b.Property<int>("Genero")
                        .HasColumnType("int")
                        .HasColumnName("genero");

                    b.Property<int>("Ingresos")
                        .HasColumnType("int")
                        .HasColumnName("ingresos");

                    b.Property<int>("Municipio")
                        .HasColumnType("int")
                        .HasColumnName("municipio");

                    b.Property<int>("NivelEducativo")
                        .HasColumnType("int")
                        .HasColumnName("nivel_educativo");

                    b.Property<int>("Ocupacion")
                        .HasColumnType("int")
                        .HasColumnName("ocupacion");

                    b.Property<int>("OrientacionSexual")
                        .HasColumnType("int")
                        .HasColumnName("orientacion_sexual");

                    b.Property<int>("P1")
                        .HasColumnType("int")
                        .HasColumnName("p1");

                    b.Property<int>("P2")
                        .HasColumnType("int")
                        .HasColumnName("p2");

                    b.Property<int>("P3")
                        .HasColumnType("int")
                        .HasColumnName("p3");

                    b.Property<int>("P4")
                        .HasColumnType("int")
                        .HasColumnName("p4");

                    b.Property<int>("P5")
                        .HasColumnType("int")
                        .HasColumnName("p5");

                    b.Property<int>("P6")
                        .HasColumnType("int")
                        .HasColumnName("p6");

                    b.Property<int>("P7")
                        .HasColumnType("int")
                        .HasColumnName("p7");

                    b.Property<int>("Sector")
                        .HasColumnType("int")
                        .HasColumnName("sector");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_id");

                    b.Property<int>("etnia")
                        .HasColumnType("int")
                        .HasColumnName("etnia");

                    b.HasKey("Id");

                    b.ToTable("poll");
                });

            modelBuilder.Entity("Vigen_Repository.Models.Site", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("nit");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country_code");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<int>("Range")
                        .HasColumnType("int")
                        .HasColumnName("range");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel");

                    b.Property<string>("Ubication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ubication");

                    b.HasKey("Id", "Nit");

                    b.ToTable("site");
                });

            modelBuilder.Entity("Vigen_Repository.Models.State", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("state");
                });

            modelBuilder.Entity("Vigen_Repository.Models.User", b =>
                {
                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("identification");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthdate");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country_code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gender");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marital_status");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("occupation");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Ubication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ubication");

                    b.Property<bool>("Verification")
                        .HasColumnType("bit")
                        .HasColumnName("verification");

                    b.HasKey("Identification");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Vigen_Repository.Models.ViolenceType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("violence_type");
                });

            modelBuilder.Entity("Vigen_Repository.Models.ViolenceTypesOrganization", b =>
                {
                    b.Property<int>("OrganizationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("organization_type_id");

                    b.Property<string>("IdViolence")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_violence");

                    b.HasKey("OrganizationTypeId", "IdViolence");

                    b.ToTable("violence_types_organization");
                });
#pragma warning restore 612, 618
        }
    }
}
